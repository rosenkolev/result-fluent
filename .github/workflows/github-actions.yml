name: dotnet package
on:
  release:
    types: [published]
env:
  NUGET_VERSION: ${{ github.event.release.tag_name }}
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core SDK 5
        uses: actions/setup-dotnet@v1.8.0
        with:
          dotnet-version: 5.0.x
      - name: Install dependencies
        run: dotnet restore src/
      - name: Test with dotnet
        run: dotnet test --no-restore --logger trx --results-directory "TestResults" src/ /p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:CoverletOutput="../../TestResults/"
      - name: Upload dotnet test results
        uses: actions/upload-artifact@v2
        with:
          name: dotnet-results
          path: TestResults
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}
      - name: Upload dotnet test coverage
        run: bash <(curl -s https://codecov.io/bash) -t ${{ secrets.CODECOV_TOKEN }} -f TestResults/coverage.opencover.xml
      - name: Build with dotnet
        run: dotnet build --no-restore --configuration Release src/FluentResult/FluentResult.csproj
      - name: Create the package with symbols
        run: dotnet pack --no-restore --configuration Release src/FluentResult/FluentResult.csproj --include-symbols -p:PackageVersion=${{NUGET_VERSION}}
      - name: Clear nupkg for another package with readme
        run: rm src/FluentResult/bin/Release/*.nupkg
      - name: Create the package with readme
        run: dotnet pack --no-restore --configuration Release src/FluentResult/FluentResult.csproj -p:PACK_README=true -p:PackageVersion=${{NUGET_VERSION}}
      - name: Publish the package to nuget.org
        run: dotnet nuget push src/FluentResult/bin/Release/*.nupkg --skip-duplicate -k $NUGET_AUTH_TOKEN -s https://api.nuget.org/v3/index.json
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.NUGET_TOKEN }}
  build_mvc:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1
      - name: Setup NuGet
        uses: NuGet/setup-nuget@v1
        with:
          nuget-api-key: ${{ secrets.NUGET_TOKEN }}
          nuget-version: 'latest'
      - name: Restore Packages
        run: nuget restore src\FluentResult.sln
      - name: Build FluentResult.Mvc with symbols
        run: |
          msbuild.exe src\FluentResult.Mvc\FluentResult.Mvc.csproj -t:pack /nologo /p:configuration="Release" /p:IncludeSymbols=true /p:PackageVersion=${{NUGET_VERSION}}
      - name: Clear nupkg for another package with readme
        run: del src\FluentResult.Mvc\bin\Release\*.nupkg
      - name: Build FluentResult.Mvc with readme
        run: |
          msbuild.exe src\FluentResult.Mvc\FluentResult.Mvc.csproj -t:pack /nologo /p:configuration="Release" /p:PACK_README=true /p:PackageVersion=${{NUGET_VERSION}}
      - name: Publish the package to nuget.org
        run: nuget push src\FluentResult.Mvc\bin\Release\*.nupkg -src https://api.nuget.org/v3/index.json -SkipDuplicate
